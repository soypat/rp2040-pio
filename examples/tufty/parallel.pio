.program st7789_parallel
.side_set 1

.wrap_target
    out pins, 8  side 0
    nop          side 1
.wrap

% go {
// helper function to setup GPIO output and configure the SM to output on needed pins
func parallelST7789Init(sm *machine.PIOStateMachine, offset uint8, d0_pin machine.Pin, wr_pin machine.Pin) {
    d0_pin.Configure(machine.PinConfig{Mode: machine.PinPIO0})
    sm.SetConsecutivePinDirs(d0_pin, 8, true)
    cfg := st7789_parallelProgramDefaultConfig(offset)
    cfg.SetSetPins(d0_pin, 8)
    cfg.SetSidePins(wr_pin)
    cfg.SetFIFOJoin(machine.PIO_FIFO_JOIN_TX)
	cfg.SetOutShift(false, true, 8)

    maxPIOClk := uint32(32 * machine.MHz)
    sysClkHz := machine.CPUFrequency()
    clkDiv := (sysClkHz + maxPIOClk -1) / maxPIOClk
    cfg.SetClkDivIntFrac(uint16(clkDiv), 1)

	sm.Init(offset, &cfg)
	sm.SetEnabled(true)
}
%}